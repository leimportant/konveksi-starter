import{d as s,a}from"./app-C0ZtNFPV.js";const i=s("product",{state:()=>({items:[],total:0,loaded:!1,loading:!1,currentPage:1,filterName:""}),actions:{async fetchProducts(t=1,e=10){const o={page:t,perPage:e,search:this.filterName};this.loaded=!1,this.currentPage=t;try{const r=await a.get("/api/products",{params:o});this.items=r.data.data,this.total=r.data.total,this.currentPage=t,this.loaded=!0}catch(r){throw console.error("Failed to fetch products:",r),r}},setFilter(t,e){(t==="search"||t==="name")&&(this.filterName=e,this.currentPage=1,this.loaded=!1,this.fetchProducts(1))},async fetchProductById(t){try{return(await a.get(`/api/products/${t}`)).data}catch(e){throw console.error("Failed to fetch product by ID:",e),e}},async createProduct(t){try{await a.post("/api/products",{name:t.name,category_id:t.category_id,descriptions:t.descriptions,uom_id:t.uom_id}),this.loaded=!1,await this.fetchProducts()}catch(e){throw console.error("Failed to create product:",e),e}},async updateProduct(t,e){try{await a.put(`/api/products/${t}`,e),this.loaded=!1,await this.fetchProducts(this.currentPage)}catch(o){throw console.error("Failed to update product:",o),o}},async deleteProduct(t){try{await a.delete(`/api/products/${t}`),this.loaded=!1,await this.fetchProducts(this.currentPage)}catch(e){throw console.error("Failed to delete product:",e),e}}}});export{i as u};
