import{U as d,b as o}from"./app-5e4EsWCB.js";const h=d("model",{state:()=>({loading:!1,error:null,models:[],employees:[],total:0,currentPage:1,lastPage:1,filters:{search:"",start_date:null,end_date:null}}),actions:{async createModel(e){var t,s;try{if(this.loading=!0,!e.start_date)throw new Error("Tanggal mulai harus diisi");return(await o.post("/api/models",{...e,start_date:e.start_date})).data}catch(a){throw this.error=((s=(t=a.response)==null?void 0:t.data)==null?void 0:s.message)||"Terjadi kesalahan saat membuat model",a}finally{this.loading=!1}},async fetchModels(e=1,t){var s,a;try{this.loading=!0;const r={...this.filters,page:e};r.is_close=t||"N";const i=await o.get("/api/models/list",{params:r});return this.models=i.data.data.data,this.total=i.data.data.total,this.currentPage=i.data.data.current_page,this.lastPage=i.data.data.last_page,i.data}catch(r){throw this.error=((a=(s=r.response)==null?void 0:s.data)==null?void 0:a.message)||"Terjadi kesalahan saat mengambil data model",r}finally{this.loading=!1}},async fetchActivityEmployee(e){var t,s;try{this.loading=!0;const a=await o.get(`/api/employee-activity-group/${e}`);return this.employees=a.data.data,a.data}catch(a){throw this.error=((s=(t=a.response)==null?void 0:t.data)==null?void 0:s.message)||"Terjadi kesalahan saat mengambil data model",a}finally{this.loading=!1}},setFilter(e,t){this.filters[e]=t,this.fetchModels(1,"-")},goToPage(e){e<1||e>this.lastPage||this.fetchModels(e,"-")},nextPage(){this.currentPage<this.lastPage&&this.fetchModels(this.currentPage+1,"-")},prevPage(){this.currentPage>1&&this.fetchModels(this.currentPage-1,"-")},async fetchModelById(e){var t,s;try{this.loading=!0;const a=await o.get(`/api/models/${e}`);if(!a.data||!a.data.data)throw new Error("Data model tidak ditemukan");return a.data}catch(a){throw this.error=((s=(t=a.response)==null?void 0:t.data)==null?void 0:s.message)||a.message||"Gagal mengambil data model",a}finally{this.loading=!1}},async updateModel(e,t){var s,a;try{this.loading=!0;const r=await o.put(`/api/models/${e}`,t),i=this.models.findIndex(l=>l.id===e);return i!==-1&&(this.models[i]=r.data.data),r.data}catch(r){throw this.error=((a=(s=r.response)==null?void 0:s.data)==null?void 0:a.message)||"Terjadi kesalahan saat memperbarui model",r}finally{this.loading=!1}},async deleteModel(e){var t,s;try{this.loading=!0,await o.delete(`/api/models/${e}`),this.models=this.models.filter(a=>a.id!==e)}catch(a){throw this.error=((s=(t=a.response)==null?void 0:t.data)==null?void 0:s.message)||"Terjadi kesalahan saat menghapus model",a}finally{this.loading=!1}},async updateCloseStatus(e){var t,s;try{this.loading=!0,this.error=null;const a=await o.patch(`/api/models/${e}/close`),r=a.data.data,i=this.models.findIndex(l=>l.id===e);return i!==-1&&(this.models[i]=r),a.data}catch(a){throw this.error=((s=(t=a.response)==null?void 0:t.data)==null?void 0:s.message)||"Terjadi kesalahan saat memperbarui status model",a}finally{this.loading=!1}}}});export{h as u};
