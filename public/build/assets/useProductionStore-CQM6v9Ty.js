import{U as d,b as s}from"./app-DSPsTJSL.js";const l=d("production",{state:()=>({loading:!1,productions:[],error:null,total:0,currentPage:1,lastPage:1}),actions:{async fetchProductions(r){var o,a;this.loading=!0;try{const t=await s.get("/api/productions",{params:r});return this.productions=t.data.data.data,this.total=t.data.data.total,this.currentPage=t.data.data.current_page,this.lastPage=t.data.data.last_page,t.data}catch(t){throw this.error=((a=(o=t.response)==null?void 0:o.data)==null?void 0:a.message)||"Failed to fetch productions",t}finally{this.loading=!1}},async fetchProductionsById(r){var o,a;this.loading=!0;try{return(await s.get(`/api/productions/${r}`)).data.data}catch(t){throw this.error=((a=(o=t.response)==null?void 0:o.data)==null?void 0:a.message)||"Failed to fetch productions",t}finally{this.loading=!1}},async createProduction(r){var o,a;this.loading=!0;try{return(await s.post("/api/productions",r)).data}catch(t){throw this.error=((a=(o=t.response)==null?void 0:o.data)==null?void 0:a.message)||"Failed to create production",t}finally{this.loading=!1}},async updateProduction(r,o){var a,t;try{this.loading=!0;const e=await s.put(`/api/productions/${r}`,o),i=this.productions.findIndex(n=>n.id===r);return i!==-1&&(this.productions[i]=e.data),e.data}catch(e){throw this.error=((t=(a=e.response)==null?void 0:a.data)==null?void 0:t.message)||"Failed to update production",e}finally{this.loading=!1}},async deleteProduction(r){var o,a;this.loading=!0;try{await s.delete(`/api/productions/${r}`),this.productions=this.productions.filter(t=>t.id!==r)}catch(t){throw this.error=((a=(o=t.response)==null?void 0:o.data)==null?void 0:a.message)||"Failed to delete production",t}finally{this.loading=!1}}}});export{l as u};
