import{r as s,b as t}from"./app-BLOMClMO.js";function O(){const n=s([]),l=s(!0),o=s(null),i=s(null),g=s(!1),f=s(null),y=async()=>{g.value=!0;try{const a=await t.get("/api/bank-account");f.value=a.data}catch(a){console.error("Gagal mengambil rekening:",a),f.value=null}finally{g.value=!1}},c=async a=>{l.value=!0,o.value=null;try{const e=await t.get("/api/orders/customer",{params:a});i.value=e.data,a!=null&&a.append?n.value=[...n.value,...e.data.data]:n.value=e.data.data}catch(e){console.error("Error fetching orders:",e),o.value="Failed to load orders. Please try again later."}finally{l.value=!1}},m=async a=>{try{if(!window.confirm("Apakah Anda yakin ingin membatalkan pesanan ini?"))return;await t.post(`/api/orders/${a}/cancel`),await c()}catch(e){console.error("Gagal membatalkan pesanan:",e),o.value="Gagal membatalkan pesanan."}},h=async a=>{try{if(!window.confirm("Apakah Anda yakin ingin membatalkan pesanan ini?"))return;const r=Number(a.replace(/\D+/g,""));await t.delete(`/api/cart-items/${r}/remove`),await u(d.value)}catch(e){console.error("Gagal membatalkan pesanan:",e),o.value="Gagal membatalkan pesanan."}},v=async a=>{try{return(await t.get(`/api/orders/${a}/shipping`)).data}catch(e){throw console.error("Gagal mengambil status pengiriman:",e),new Error("Gagal mengambil status pengiriman")}},u=async a=>{l.value=!0,o.value=null;try{const e=await t.get("/api/orders/request",{params:a});i.value=e.data,a!=null&&a.append?n.value=[...n.value,...e.data.data]:n.value=e.data.data}catch(e){console.error("Error fetching orders:",e),o.value="Failed to load orders. Please try again later."}finally{l.value=!1}};async function w(a,e){try{return(await t.post(`/api/orders/${a}/shipping`,e,{headers:{"Content-Type":"multipart/form-data"}})).data}catch(r){throw console.error("Error updating shipping:",r),r}}async function k(a,e){try{const r=new FormData;return r.append("payment_proof",e),(await t.post(`/api/orders/${a}/upload-payment-proof`,r,{headers:{"Content-Type":"multipart/form-data"}})).data}catch(r){throw console.error("Error uploading payment proof:",r),r}}const d=s({});return{orders:n,isLoading:l,error:o,pagination:i,fetchOrders:c,fetchBankAccount:y,setFilter:(a,e,r)=>{d.value[a]=e,c({[a]:e,...r})},setFilterOrderRequest:(a,e,r)=>{d.value[a]=e;const p={...r,[a]:e};r!=null&&r.status&&(p.status=r.status),u(p)},fetchOrderRequest:u,cancelOrder:m,deleteOrder:h,updateShipping:w,checkShipping:v,uploadPaymentProof:k}}export{O as u};
