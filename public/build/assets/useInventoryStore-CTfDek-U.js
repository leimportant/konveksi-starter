import{U as c,b as i}from"./app-VdPjVcKi.js";const d=c("inventory",{state:()=>({loading:!1,inventory:[],inventoryRpt:[],stockMonitoringReport:[],error:null,total:0,currentPage:1,lastPage:1,filters:{location:null,sloc:null,product:null,productName:null}}),actions:{setFilter(e,r){e==="location"||e==="product"?this.filters[e]=r===""?null:Number(r):this.filters[e]=r===""?null:String(r)},async fetchInventory(e=1,r=50){var o,a;this.loading=!0;try{const t=await i.get(`/api/inventories?page=${e}&perPage=${r}`,{params:{...this.filters}});this.inventoryRpt=t.data.data,this.total=t.data.total??0,this.currentPage=t.data.current_page??1,this.lastPage=t.data.last_page??1}catch(t){this.error=((a=(o=t.response)==null?void 0:o.data)==null?void 0:a.message)||"Failed to fetch inventory",console.error("Fetch inventory error:",this.error)}finally{this.loading=!1}},async updateInventory(e,r,o,a,t){var n,s;try{await i.put(`/api/inventories/${e}/${r}/${o}/${a}`,{qty:t})}catch(l){this.error=((s=(n=l.response)==null?void 0:n.data)==null?void 0:s.message)||"Failed to update inventory",console.error("Update inventory error:",this.error)}},async deleteInventory(e,r,o,a){var t,n;try{await i.delete(`/api/inventories/${e}/${r}/${o}/${a}`)}catch(s){this.error=((n=(t=s.response)==null?void 0:t.data)==null?void 0:n.message)||"Failed to delete inventory",console.error("Delete inventory error:",this.error)}},async fetchStockMonitoringReport(e=1,r=50){var o,a;this.loading=!0,this.error=null;try{const t=await i.get("/api/inventory/stock-monitoring",{params:{page:e,perPage:r,...this.filters}});this.stockMonitoringReport=t.data.data,this.currentPage=t.data.current_page??1,this.lastPage=t.data.last_page??1,this.total=t.data.total??0}catch(t){this.error=((a=(o=t.response)==null?void 0:o.data)==null?void 0:a.message)||"Failed to fetch stock monitoring report",console.error("Fetch stock monitoring error:",this.error)}finally{this.loading=!1}}}});export{d as u};
