import{U as u,b as o}from"./app-DwD40pha.js";const f=u("cart",{state:()=>({cartItems:[],loading:!1,error:null}),actions:{async fetchCartItems(){var a,r;this.loading=!0;try{const e=(await o.get("/api/cart-items")).data,c=await Promise.all(e.map(async s=>{if(!s.product){const n=await o.get(`/api/products/${s.product_id}`);return{...s,product:n.data}}return s}));this.cartItems=c,this.error=null}catch(t){this.error=((r=(a=t.response)==null?void 0:a.data)==null?void 0:r.message)||"Error fetching cart items"}finally{this.loading=!1}},async addToCart(a,r,t,e,c,s,n,h,m,p){var l,d;this.loading=!0;try{const i=await o.post("/api/cart-items/add",{product_id:a,quantity:r,price:c,location_id:h,variant:m,sloc_id:p,discount:s,price_sell:n,size_id:t,uom_id:e});return this.error=null,await this.fetchCartItems(),i.data}catch(i){throw this.error=((d=(l=i.response)==null?void 0:l.data)==null?void 0:d.message)||"Error adding to cart",i}finally{this.loading=!1}},async removeFromCart(a){var r,t;this.loading=!0;try{await o.delete(`/api/cart-items/${a}/remove`),this.error=null,await this.fetchCartItems()}catch(e){throw this.error=((t=(r=e.response)==null?void 0:r.data)==null?void 0:t.message)||"Error removing from cart",e}finally{this.loading=!1}},async clearCart(){var a,r;this.loading=!0;try{await o.delete("/api/cart-items/clear"),this.cartItems=[],this.error=null}catch(t){throw this.error=((r=(a=t.response)==null?void 0:a.data)==null?void 0:r.message)||"Error clearing cart",t}finally{this.loading=!1}}}});export{f as u};
