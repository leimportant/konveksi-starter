import{R as d,b as i}from"./app-CW-kO8qa.js";const n=d("purchaseOrder",{state:()=>({items:[],total:0,loaded:!1,loading:!1,currentPage:1,lastPage:1,filterSearch:"",error:null,purchaseOrder:null,products:[],uoms:[]}),actions:{async fetchPurchaseOrders(a=1,t=10){var r,e,o,h,c;this.loading=!0,this.error=null;try{const s=await i.get("/api/purchase-order",{params:{page:a,limit:t,search:this.filterSearch}});this.items=s.data.data,this.total=((r=s.data.meta)==null?void 0:r.total)??0,this.currentPage=((e=s.data.meta)==null?void 0:e.current_page)??1,this.lastPage=((o=s.data.meta)==null?void 0:o.last_page)??1,this.loaded=!0}catch(s){console.error("Failed to fetch purchase orders:",s),this.error=((c=(h=s==null?void 0:s.response)==null?void 0:h.data)==null?void 0:c.message)||"Failed to fetch data."}finally{this.loading=!1}},async fetchPurchaseOrder(a){var t,r;this.loading=!0,this.error=null;try{const e=await i.get(`/api/purchase-order/${a}`);return this.purchaseOrder=e.data.data,e.data.data}catch(e){throw console.error(`Failed to fetch purchase order ${a}:`,e),this.error=((r=(t=e==null?void 0:e.response)==null?void 0:t.data)==null?void 0:r.message)||"Failed to fetch data.",e}finally{this.loading=!1}},setFilter(a,t){a==="search"&&(this.filterSearch=t,this.currentPage=1,this.loaded=!1,this.fetchPurchaseOrders(1))},async createPurchaseOrder(a){var t,r;this.loading=!0,this.error=null;try{await i.post("/api/purchase-order",a),this.loaded=!1,await this.fetchPurchaseOrders()}catch(e){throw console.error("Failed to create purchase order:",e),this.error=((r=(t=e==null?void 0:e.response)==null?void 0:t.data)==null?void 0:r.message)||"Failed to create.",e}finally{this.loading=!1}},async updatePurchaseOrder(a,t){var r,e;this.loading=!0,this.error=null;try{await i.put(`/api/purchase-order/${a}`,t),this.loaded=!1,await this.fetchPurchaseOrders()}catch(o){throw console.error(`Failed to update purchase order ${a}:`,o),this.error=((e=(r=o==null?void 0:o.response)==null?void 0:r.data)==null?void 0:e.message)||"Failed to update.",o}finally{this.loading=!1}},async deletePurchaseOrder(a){var t,r;this.loading=!0,this.error=null;try{await i.delete(`/api/purchase-order/${a}`),this.loaded=!1,await this.fetchPurchaseOrders()}catch(e){throw console.error(`Failed to delete purchase order ${a}:`,e),this.error=((r=(t=e==null?void 0:e.response)==null?void 0:t.data)==null?void 0:r.message)||"Failed to delete.",e}finally{this.loading=!1}},async fetchProducts(){try{const a=await i.get("/api/products");this.products=a.data.data}catch(a){console.error("Failed to fetch products",a)}},async fetchUoms(){try{const a=await i.get("/api/uoms");this.uoms=a.data.data}catch(a){console.error("Failed to fetch UOMs",a)}}}});export{n as u};
